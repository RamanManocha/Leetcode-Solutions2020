895. Maximum Frequency Stack
Hard


Share
Implement FreqStack, a class which simulates the operation of a stack-like data structure.

FreqStack has two functions:

push(int x), which pushes an integer x onto the stack.
pop(), which removes and returns the most frequent element in the stack.
If there is a tie for most frequent element, the element closest to the top of the stack is removed and returned.

Approach:


1. push(int x): map the element (x) with frequency HashMap and update the maxfreq variable ( i.e. holds the maximum frequency till now ). setMap maintains a stack 
which contains all the elements with same frequency.
pop(): First get the maxfreq element from setMap and then decrement the frequency of the popped element. After popping, if the stack becomes empty then decrement 
the maxfreq.

class FreqStack {
public:
    int maxfreq;
    unordered_map<int, int> mp;
    unordered_map<int, stack<int>> myMap;
    
    FreqStack() {
        int maxFreq = 0;
       
        
        
    }
    
    void push(int x) {
        if(mp.count(x)){
             mp[x]++;
        }
        else {
            mp[x] = 1;
        }
        myMap[mp[x]].push(x);
        maxfreq = max(maxfreq, mp[x]);
        return;
        
    }
    
    int pop() {
        int ans = myMap[maxfreq].top();
        mp[ans]--;
        myMap[maxfreq].pop();
        if(myMap[maxfreq].empty())
            maxfreq--;
        return ans;
        
    }
};
